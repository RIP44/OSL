#include<stdio.h>
#include<conio.h>
#include<string.h>

void main()
{
    int alloc[10][10], max[10][10], need[10][10];
    int avail[10], work[10], total[10], safe[10];
    int i,j,k,m,n,l=0;
    int count = 0, c = 0;
    char finish[10];
    printf("\nEnter the number of processes: ");
    scanf("%d",&n);
    printf("\nEnter the number of types of resources: ");
    scanf("%d",&m);

    for(i=0;i<n;i++)
        finish[i] = 'n';

    printf("\nEnter the Maximum matix:\n");
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            scanf("%d",&max[i][j]);

    printf("\nEnter the Allocation matix:\n");
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            scanf("%d",&alloc[i][j]);
    printf("\nEnter the total number of resources: ");
    for(j=0;j<m;j++)
        scanf("%d",&total[j]);

    for(j=0;j<m;j++)
        avail[j] = 0;
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            avail[j] += alloc[i][j];
    for(j=0;j<m;j++)
        work[j] = avail[j];
    for(j=0;j<m;j++)
        work[j] = total[j] - work[j];
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            need[i][j] = max[i][j]-alloc[i][j];
    A:
        for(i=0;i<n;i++)
        {
            c = 0;
            for(j=0;j<m;j++)
                if((need[i][j]<= work[j])&&(finish[i] == 'n'))
                    c++;
            if(c == m)
            {
                printf("\nAll resources can be allocated to the process %d",i+1);
                printf("\nAvailable resources are: ");
                for(k=0;k<m;k++)
                {
                    work[k] += alloc[i][k];
                    printf("%d\t",work[k]);
                }
                printf("\n");
                finish[i] = 'i';
                printf("\nProcess %d executed ?? %c\n",i+1,finish[i]);
                count++;
                safe[l++] = i+1;
            }
        }
        if(count!= n)
            goto A;
        else
        {
            printf("\nSystem is in safe state");
            printf("\nSafe sequence is : ");
            for(i=0;i<n;i++)
                printf("\t%d", safe[i]);
        }
        getch();
}
